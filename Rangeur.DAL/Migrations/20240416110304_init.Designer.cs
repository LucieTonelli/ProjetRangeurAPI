// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rangeur.DAL;

#nullable disable

namespace Rangeur.DAL.Migrations
{
    [DbContext(typeof(RangeurContext))]
    [Migration("20240416110304_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MissionUser", b =>
                {
                    b.Property<int>("MissionsIdMission")
                        .HasColumnType("int");

                    b.Property<int>("UsersIdUser")
                        .HasColumnType("int");

                    b.HasKey("MissionsIdMission", "UsersIdUser");

                    b.HasIndex("UsersIdUser");

                    b.ToTable("MissionUser");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.BonusMalus", b =>
                {
                    b.Property<int>("IdBonusMalus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBonusMalus"));

                    b.Property<string>("DescriptionAttribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomBonusMalus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointBonusMalus")
                        .HasColumnType("int");

                    b.HasKey("IdBonusMalus");

                    b.ToTable("BonusMalus");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.Mission", b =>
                {
                    b.Property<int>("IdMission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMission"));

                    b.Property<int?>("BonusMalusIdBonusMalus")
                        .HasColumnType("int");

                    b.Property<int>("BonusMission")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionMission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomMission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TacheIdTache")
                        .HasColumnType("int");

                    b.HasKey("IdMission");

                    b.HasIndex("BonusMalusIdBonusMalus");

                    b.HasIndex("TacheIdTache");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.RoleRangeur", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("NomRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole");

                    b.ToTable("RoleRangeurs");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.Tache", b =>
                {
                    b.Property<int>("IdTache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTache"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomTache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointBonusMalusIdBonusMalus")
                        .HasColumnType("int");

                    b.Property<int>("PrioriteTaches")
                        .HasColumnType("int");

                    b.Property<string>("Recurrence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("IdTache");

                    b.HasIndex("PointBonusMalusIdBonusMalus");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("DateDerniereConnexion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PseudoUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleRangeurIdRole")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("Telephone")
                        .HasColumnType("int");

                    b.HasKey("IdUser");

                    b.HasIndex("RoleRangeurIdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TacheUser", b =>
                {
                    b.Property<int>("TachesIdTache")
                        .HasColumnType("int");

                    b.Property<int>("UsersIdUser")
                        .HasColumnType("int");

                    b.HasKey("TachesIdTache", "UsersIdUser");

                    b.HasIndex("UsersIdUser");

                    b.ToTable("TacheUser");
                });

            modelBuilder.Entity("MissionUser", b =>
                {
                    b.HasOne("Rangeur.Domain.Models.Mission", null)
                        .WithMany()
                        .HasForeignKey("MissionsIdMission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rangeur.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersIdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rangeur.Domain.Models.Mission", b =>
                {
                    b.HasOne("Rangeur.Domain.Models.BonusMalus", "BonusMalus")
                        .WithMany()
                        .HasForeignKey("BonusMalusIdBonusMalus");

                    b.HasOne("Rangeur.Domain.Models.Tache", null)
                        .WithMany("Missions")
                        .HasForeignKey("TacheIdTache");

                    b.Navigation("BonusMalus");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.Tache", b =>
                {
                    b.HasOne("Rangeur.Domain.Models.BonusMalus", "PointBonusMalus")
                        .WithMany("taches")
                        .HasForeignKey("PointBonusMalusIdBonusMalus");

                    b.Navigation("PointBonusMalus");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.User", b =>
                {
                    b.HasOne("Rangeur.Domain.Models.RoleRangeur", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleRangeurIdRole");
                });

            modelBuilder.Entity("TacheUser", b =>
                {
                    b.HasOne("Rangeur.Domain.Models.Tache", null)
                        .WithMany()
                        .HasForeignKey("TachesIdTache")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rangeur.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersIdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rangeur.Domain.Models.BonusMalus", b =>
                {
                    b.Navigation("taches");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.RoleRangeur", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Rangeur.Domain.Models.Tache", b =>
                {
                    b.Navigation("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
